"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),llm.organizationReminders=(()=>{const e=document.getElementsByTagName("main")[0].getAttribute("data-url-prefix");let t;const n=new Map;let i=[];const r=e=>{0===n.size?(llm.getDefaultConfigProperty("dismissingStatuses",e=>{i=e}),llm.getDefaultConfigProperty("reminderCategories",i=>{t=i;for(const e of t)for(const t of e.reminderTypes)t.reminderCategory=e.reminderCategory,n.set(t.reminderTypeKey,t);e&&e()})):e&&e()},d=(t,n)=>{cityssm.postJSON(e+"/organizations/doGetReminders",{organizationID:t},n)},s=(t,n,i)=>{cityssm.postJSON(e+"/organizations/doDismissReminder",{organizationID:t,reminderIndex:n},i)},o=(t,n,i)=>{cityssm.postJSON(e+"/organizations/doDeleteReminder",{organizationID:t,reminderIndex:n},i)};return{loadReminderTypeCache:r,getRemindersByOrganizationID:d,getReminderByID:(t,n,i)=>{cityssm.postJSON(e+"/organizations/doGetReminder",{organizationID:t,reminderIndex:n},i)},openAddReminderModal:(i,s)=>{let o;const m=t=>{t.preventDefault(),cityssm.postJSON(e+"/organizations/doAddReminder",t.currentTarget,e=>{e.success&&(o(),s&&s(e.reminder))})},a=e=>{const t=e.currentTarget.value,i=n.get(t),r=document.getElementById("addReminder--reminderStatus");r.value="",r.innerHTML='<option value="">(Not Set)</option>';for(const e of i.reminderStatuses){const t=document.createElement("option");t.value=e,t.innerText=e,r.appendChild(t)}};r(()=>{cityssm.openHtmlModal("reminderAdd",{onshow(){document.getElementById("addReminder--organizationID").value=i.toString(),document.getElementById("addReminder--reminderDateString").setAttribute("min",cityssm.dateToString(new Date)),d(i,e=>{const n=document.getElementById("addReminder--reminderTypeKey");for(const i of t){if(!i.isActive)continue;const t=document.createElement("optgroup");t.label=i.reminderCategory;for(const n of i.reminderTypes){if(!n.isActive)continue;if(n.hasUndismissedLimit&&e.find(e=>e.reminderTypeKey===n.reminderTypeKey&&""===e.dismissedDateString))continue;const i=document.createElement("option");i.value=n.reminderTypeKey,i.innerText=n.reminderType,t.appendChild(i)}n.appendChild(t)}n.addEventListener("change",a),n.closest(".select").classList.remove("is-loading")}),document.getElementById("form--addReminder").addEventListener("submit",m)},onshown(e,t){o=t}})})},openEditReminderModal:(s,o,m)=>{let a,c=!1;const l=t=>{t.preventDefault(),cityssm.postJSON(e+"/organizations/doEditReminder",t.currentTarget,e=>{e.success&&(a(),m&&m(e.reminder))})},u=()=>{const e=document.getElementById("editReminder--reminderTypeKey").value,t=n.get(e),r=document.getElementById("editReminder--reminderStatus");r.value="",r.innerHTML='<option data-is-dismissing="0" value="">(Not Set)</option>';for(const e of t.reminderStatuses){const t=document.createElement("option");t.value=e,t.innerText=e,t.setAttribute("data-is-dismissing",i.includes(e)?"1":"0"),r.appendChild(t)}},g=e=>{if(c)return;const t="1"===e.currentTarget.selectedOptions[0].getAttribute("data-is-dismissing");document.getElementById("editReminder--dismissedDateString").value=t?cityssm.dateToString(new Date):""};r(()=>{cityssm.openHtmlModal("reminderEdit",{onshow(){document.getElementById("editReminder--organizationID").value=s.toString(),document.getElementById("editReminder--reminderIndex").value=o.toString(),document.getElementById("form--editReminder").addEventListener("submit",l)},onshown(e,n){a=n,d(s,e=>{const n=e.find(e=>e.reminderIndex===o);if(!n)return a(),void cityssm.alertModal("Reminder Not Found","","OK","danger");const i=document.getElementById("editReminder--reminderTypeKey");for(const r of t){const t=document.createElement("optgroup");t.label=r.reminderCategory;for(const i of r.reminderTypes){if(i.reminderTypeKey!==n.reminderTypeKey){if(!i.isActive||!r.isActive)continue;if(i.hasUndismissedLimit&&e.find(e=>e.reminderTypeKey===i.reminderTypeKey&&""===e.dismissedDateString))continue}const d=document.createElement("option");d.value=i.reminderTypeKey,d.innerText=i.reminderType,t.appendChild(d)}t.children.length>0&&i.appendChild(t)}i.value=n.reminderTypeKey,i.addEventListener("change",u),i.closest(".select").classList.remove("is-loading"),document.getElementById("editReminder--reminderDateString").value=n.reminderDateString,u();const r=document.getElementById("editReminder--reminderStatus");if(n.reminderStatus&&""!==n.reminderStatus){let e=!1;for(const t of r.options)if(t.value===n.reminderStatus){e=!0;break}if(!e){const e=document.createElement("option");e.innerText=n.reminderStatus,e.value=n.reminderStatus,r.appendChild(e)}r.value=n.reminderStatus}r.addEventListener("change",g),document.getElementById("editReminder--reminderNote").value=n.reminderNote;const d=document.getElementById("editReminder--dismissedDateString");d.value=n.dismissedDateString,d.setAttribute("max",cityssm.dateToString(new Date)),""!==n.dismissedDateString&&(c=!0),d.addEventListener("change",()=>{c=!0})})}})})},dismissReminder:(e,t,n,i)=>{n?cityssm.confirmModal("Dismiss Reminder?","Are you sure you want to dismiss this reminder?","Yes, Dismiss","warning",()=>{s(e,t,i)}):s(e,t,i)},deleteReminder:(e,t,n,i)=>{n?cityssm.confirmModal("Delete Reminder?","Are you sure you want to delete this reminder?","Yes, Delete","danger",()=>{o(e,t,i)}):o(e,t,i)},getReminderType:e=>n.get(e)}})();